steps:
# build client base image - python 3.10
- name: gcr.io/cloud-builders/docker
  args:
  - '-c'
  - |
    docker build \
      --build-arg ZENML_VERSION=$TAG_NAME \
      --build-arg PYTHON_VERSION=3.10 \
      --build-arg ZENML_NIGHTLY=true \
      --target client \
      -f docker/base.Dockerfile . \
      -t $$USERNAME/zenml:$TAG_NAME-py3.10-nightly

    # no need to check for official release regex, this is for nightly builds
    docker tag $$USERNAME/zenml:$TAG_NAME-py3.10-nightly $$USERNAME/zenml:py3.10-nightly

  id: build-base-3.10-nightly
  waitFor: ['-']
  entrypoint: bash
  secretEnv:
  - USERNAME

# build server image - python 3.11 only
- name: gcr.io/cloud-builders/docker
  args:
  - '-c'
  - |
    docker build \
      --build-arg ZENML_VERSION=$TAG_NAME \
      --build-arg PYTHON_VERSION=3.11 \
      --build-arg ZENML_NIGHTLY=true \
      --target server \
      -f docker/base.Dockerfile . \
      -t $$USERNAME/zenml-server:$TAG_NAME-nightly
  id: build-server-nightly
  waitFor: ['-']
  entrypoint: bash
  secretEnv:
  - USERNAME

# login to Dockerhub
- name: gcr.io/cloud-builders/docker
  args:
  - '-c'
  - docker login --username=$$USERNAME --password=$$PASSWORD
  id: docker-login
  entrypoint: bash
  secretEnv:
  - USERNAME
  - PASSWORD

# push base images
- name: gcr.io/cloud-builders/docker
  args:
  - '-c'
  - docker push --all-tags $$USERNAME/zenml
  id: push-base
  waitFor:
  - docker-login
  - build-base-3.10-nightly
  entrypoint: bash
  secretEnv:
  - USERNAME

# push server images
- name: gcr.io/cloud-builders/docker
  args:
  - '-c'
  - docker push --all-tags $$USERNAME/zenml-server
  id: push-server
  waitFor:
  - docker-login
  - build-server-nightly
  entrypoint: bash
  secretEnv:
  - USERNAME

timeout: 3600s
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/docker-password/versions/1
    env: PASSWORD
  - versionName: projects/$PROJECT_ID/secrets/docker-username/versions/1
    env: USERNAME
